// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// create_natcauslist_cpp
Rcpp::NumericVector create_natcauslist_cpp(Rcpp::NumericVector& cl, Rcpp::List& net, StringVector& ordering);
RcppExport SEXP _natPsoho_create_natcauslist_cpp(SEXP clSEXP, SEXP netSEXP, SEXP orderingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type net(netSEXP);
    Rcpp::traits::input_parameter< StringVector& >::type ordering(orderingSEXP);
    rcpp_result_gen = Rcpp::wrap(create_natcauslist_cpp(cl, net, ordering));
    return rcpp_result_gen;
END_RCPP
}
// cl_to_arc_matrix_cpp
Rcpp::CharacterMatrix cl_to_arc_matrix_cpp(const Rcpp::NumericVector& cl, Rcpp::CharacterVector& ordering, unsigned int rows);
RcppExport SEXP _natPsoho_cl_to_arc_matrix_cpp(SEXP clSEXP, SEXP orderingSEXP, SEXP rowsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector& >::type ordering(orderingSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type rows(rowsSEXP);
    rcpp_result_gen = Rcpp::wrap(cl_to_arc_matrix_cpp(cl, ordering, rows));
    return rcpp_result_gen;
END_RCPP
}
// pos_plus_vel_cpp
Rcpp::List pos_plus_vel_cpp(Rcpp::List& cl, Rcpp::List& vl, int n_arcs);
RcppExport SEXP _natPsoho_pos_plus_vel_cpp(SEXP clSEXP, SEXP vlSEXP, SEXP n_arcsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type vl(vlSEXP);
    Rcpp::traits::input_parameter< int >::type n_arcs(n_arcsSEXP);
    rcpp_result_gen = Rcpp::wrap(pos_plus_vel_cpp(cl, vl, n_arcs));
    return rcpp_result_gen;
END_RCPP
}
// init_list_cpp
Rcpp::List init_list_cpp(Rcpp::StringVector nodes, unsigned int size, unsigned int n_inds);
RcppExport SEXP _natPsoho_init_list_cpp(SEXP nodesSEXP, SEXP sizeSEXP, SEXP n_indsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type n_inds(n_indsSEXP);
    rcpp_result_gen = Rcpp::wrap(init_list_cpp(nodes, size, n_inds));
    return rcpp_result_gen;
END_RCPP
}
// one_hot_cpp
int one_hot_cpp(int nat);
RcppExport SEXP _natPsoho_one_hot_cpp(SEXP natSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nat(natSEXP);
    rcpp_result_gen = Rcpp::wrap(one_hot_cpp(nat));
    return rcpp_result_gen;
END_RCPP
}
// pos_minus_pos_cpp
Rcpp::List pos_minus_pos_cpp(Rcpp::List& cl, Rcpp::List& ps, Rcpp::List& vl);
RcppExport SEXP _natPsoho_pos_minus_pos_cpp(SEXP clSEXP, SEXP psSEXP, SEXP vlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type cl(clSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type ps(psSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type vl(vlSEXP);
    rcpp_result_gen = Rcpp::wrap(pos_minus_pos_cpp(cl, ps, vl));
    return rcpp_result_gen;
END_RCPP
}
// nat_vel_plus_vel_cpp
int nat_vel_plus_vel_cpp(Rcpp::NumericVector& vl1, Rcpp::NumericVector& vl1_neg, Rcpp::NumericVector& vl2, Rcpp::NumericVector& vl2_neg, int abs_op1, int abs_op2);
RcppExport SEXP _natPsoho_nat_vel_plus_vel_cpp(SEXP vl1SEXP, SEXP vl1_negSEXP, SEXP vl2SEXP, SEXP vl2_negSEXP, SEXP abs_op1SEXP, SEXP abs_op2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type vl1(vl1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type vl1_neg(vl1_negSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type vl2(vl2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type vl2_neg(vl2_negSEXP);
    Rcpp::traits::input_parameter< int >::type abs_op1(abs_op1SEXP);
    Rcpp::traits::input_parameter< int >::type abs_op2(abs_op2SEXP);
    rcpp_result_gen = Rcpp::wrap(nat_vel_plus_vel_cpp(vl1, vl1_neg, vl2, vl2_neg, abs_op1, abs_op2));
    return rcpp_result_gen;
END_RCPP
}
// cte_times_vel_cpp
Rcpp::List cte_times_vel_cpp(float k, Rcpp::List& vl, unsigned int abs_op, int max_op);
RcppExport SEXP _natPsoho_cte_times_vel_cpp(SEXP kSEXP, SEXP vlSEXP, SEXP abs_opSEXP, SEXP max_opSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type k(kSEXP);
    Rcpp::traits::input_parameter< Rcpp::List& >::type vl(vlSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type abs_op(abs_opSEXP);
    Rcpp::traits::input_parameter< int >::type max_op(max_opSEXP);
    rcpp_result_gen = Rcpp::wrap(cte_times_vel_cpp(k, vl, abs_op, max_op));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_natPsoho_create_natcauslist_cpp", (DL_FUNC) &_natPsoho_create_natcauslist_cpp, 3},
    {"_natPsoho_cl_to_arc_matrix_cpp", (DL_FUNC) &_natPsoho_cl_to_arc_matrix_cpp, 3},
    {"_natPsoho_pos_plus_vel_cpp", (DL_FUNC) &_natPsoho_pos_plus_vel_cpp, 3},
    {"_natPsoho_init_list_cpp", (DL_FUNC) &_natPsoho_init_list_cpp, 3},
    {"_natPsoho_one_hot_cpp", (DL_FUNC) &_natPsoho_one_hot_cpp, 1},
    {"_natPsoho_pos_minus_pos_cpp", (DL_FUNC) &_natPsoho_pos_minus_pos_cpp, 3},
    {"_natPsoho_nat_vel_plus_vel_cpp", (DL_FUNC) &_natPsoho_nat_vel_plus_vel_cpp, 6},
    {"_natPsoho_cte_times_vel_cpp", (DL_FUNC) &_natPsoho_cte_times_vel_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_natPsoho(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
